2.2.4

.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.38.2.
.TH RNAPVMIN "1" "February 2016" "RNApvmin 2.2.4" "User Commands"
.SH NAME
RNApvmin \- manual page for RNApvmin 2.2.4
.SH SYNOPSIS
.B RNApvmin
[\fIoptions\fR] \fI<file.shape>\fR
.SH DESCRIPTION
RNApvmin 2.2.4
.PP
Calculate a perturbation vector that minimizes discripancies between predicted
and observed pairing probabilities
.PP
The program reads a RNA sequence from stdin and uses an iterative minimization
process to calculate a perturbation vector that minimizes the discripancies
between predicted pairing probabilites and observed pairing probabilities
(deduced from given shape reactivities). Experimental data is read from a given
SHAPE file and normalized to pairing probabilities. The experimental data has
to be provided in a multiline plain text file where each line has the format
\&'[position] [nucleotide] [absolute shape reactivity]' (e.g. '3 A 0.7'). The
objective function used for the minimization may be weighted by choosing
appropriate values for sigma and tau.
.PP
The minimization progress will be written to stderr. Once the minimization has
terminated, the obtained perturbation vector is written to stdout.
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help and exit
.TP
\fB\-\-detailed\-help\fR
Print help, including all details and hidden
options, and exit
.TP
\fB\-\-full\-help\fR
Print help, including hidden options, and exit
.TP
\fB\-V\fR, \fB\-\-version\fR
Print version and exit
.SS "General Options:"
.IP
Below are command line options which alter the general behavior of this
program
.TP
\fB\-j\fR, \fB\-\-numThreads\fR=\fIINT\fR
Set the number of threads used for calculations
(only available when compiled with OpenMP
support)
.TP
\fB\-\-shapeConversion\fR=\fIM\fR/C/S/L/O
+ [optional parameters]
Specify the method used to convert SHAPE
.IP
reactivities to pairing probabilities.
.IP
(default=`O')
.IP
The following methods can be used to convert SHAPE reactivities into the
probability for a certain nucleotide to be unpaired.
.IP
\&'M': Use linear mapping according to Zarringhalam et al.
\&'C': Use a cutoff\-approach to divide into paired and unpaired nucleotides
(e.g. "C0.25")
\&'S': Skip the normalizing step since the input data already represents
probabilities for being unpaired rather than raw reactivity values
\&'L': Use a linear model to convert the reactivity into a probability for
being unpaired (e.g. "Ls0.68i0.2" to use a slope of 0.68 and an intercept
of 0.2)
\&'O': Use a linear model to convert the log of the reactivity into a
probability for being unpaired (e.g. "Os1.6i\-2.29" to use a slope of 1.6
and an intercept of \fB\-2\fR.29)
.TP
\fB\-\-tauSigmaRatio\fR=\fIDOUBLE\fR
Ratio of the weighting factors tau and sigma. A
high ratio will lead to a solution as close
as possible to the experimental data, while a
low ratio will lead to results close to the
thermodynamic prediction without guiding
pseudo energies.  (default=`1.0')
.TP
\fB\-\-objectiveFunction\fR=\fIINT\fR
The energies of the perturbation vector and the
discripancies between predicted and observed
pairing probabilities contribute to the
objective function. This parameter defines,
which function is used to process the
contributions before summing them up.
0 square
1 absolute  (default=`0')
.TP
\fB\-\-sampleSize\fR=\fIINT\fR
The iterative minimization process requires to
evaluate the gradient of the objective
function. A sample size of 0 leads to an
analytical evaluation which scales as O(N^4).
Choosing a sample size >0 estimates the
gradient by sampling the given number of
sequences from the ensemble, which is much
faster.  (default=`1000')
.TP
\fB\-\-intermediatePath\fR=\fISTRING\fR Write an output file for each iteration of the
minimization process. Each file contains the
used perturbation vector and the score of the
objective function. The number of the
iteration will be appended to the given path.
.TP
\fB\-\-initialVector\fR=\fIDOUBLE\fR
Defines the initial perturbation vector which
will be used as starting vector for the
minimization process. The value 0 results in
a null vector. Every other value x will be
used to populate the initial vector with
random numbers from the interval [\-x,x].
(default=`0')
.TP
\fB\-\-minimizer\fR=\fIENUM\fR
Set the minimizing algorithm used for finding
an appropriate perturbation vector. The
default option uses a custom implementation
of the gradient descent algorithms while all
other options represent various algorithms
implemented in the GNU Scientific Library.
When the GNU Scientific Library can not be
found, only the default minimizer is
available.  (possible
values="conjugate_fr", "conjugate_pr",
"vector_bfgs", "vector_bfgs2",
"steepest_descent", "default"
default=`default')
.TP
\fB\-\-initialStepSize\fR=\fIDOUBLE\fR
The initial stepsize for the minimizer methods
(default=`0.01')
.TP
\fB\-\-minStepSize\fR=\fIDOUBLE\fR
The minimal stepsize for the minizimer methods
(default=`1e\-15')
.TP
\fB\-\-minImprovement\fR=\fIDOUBLE\fR
The minimal improvement in the default
minizimer method that has to be surpassed to
considered a new result a better one
.IP
(default=`1e\-3')
.TP
\fB\-\-minimizerTolerance\fR=\fIDOUBLE\fR
The tolerance to be used in the GSL minimizer
.IP
methods
.IP
(default=`1e\-3')
.SS "Model Details:"
.TP
\fB\-S\fR, \fB\-\-pfScale\fR=\fIscaling\fR factor
In the calculation of the pf use scale*mfe as
an estimate for the ensemble free energy
(used to avoid overflows).  (default=`1.07')
.IP
Useful values are 1.0 to 1.2. Occasionally needed for long sequences.
\fB\-T\fR, \fB\-\-temp\fR=\fIDOUBLE\fR             Rescale energy parameters to a temperature of
.IP
temp C. Default is 37C.
.TP
\fB\-4\fR, \fB\-\-noTetra\fR
Do not include special tabulated stabilizing
energies for tri\-, tetra\- and hexaloop
hairpins. Mostly for testing.
.IP
(default=off)
.TP
\fB\-d\fR, \fB\-\-dangles\fR=\fIINT\fR
How to treat "dangling end" energies for
bases adjacent to helices in free ends and
multi\-loops
.IP
(default=`2')
.IP
With \fB\-d1\fR only unpaired bases can participate in at most one dangling end,
this is the default for mfe folding but unsupported for the partition
function folding.
.IP
With \fB\-d2\fR this check is ignored, dangling energies will be added for the bases
adjacent to a helix on both sides in any case; this is the default for
partition function folding (\fB\-p\fR).
The option \fB\-d0\fR ignores dangling ends altogether (mostly for debugging).
With \fB\-d3\fR mfe folding will allow coaxial stacking of adjacent helices in
multi\-loops. At the moment the implementation will not allow coaxial stacking
of the two interior pairs in a loop of degree 3 and works only for mfe
folding.
.IP
Note that by default (as well as with \fB\-d1\fR and \fB\-d3\fR) pf and mfe folding treat
dangling ends differently. Use \fB\-d2\fR in addition to \fB\-p\fR to ensure that both
algorithms use the same energy model.
.TP
\fB\-\-noLP\fR
Produce structures without lonely pairs
(helices of length 1).
.IP
(default=off)
.IP
For partition function folding this only disallows pairs that can only occur
isolated. Other pairs may still occasionally occur as helices of length 1.
.TP
\fB\-\-noGU\fR
Do not allow GU pairs
.IP
(default=off)
.TP
\fB\-\-noClosingGU\fR
Do not allow GU pairs at the end of helices
.IP
(default=off)
.TP
\fB\-P\fR, \fB\-\-paramFile\fR=\fIparamfile\fR
Read energy parameters from paramfile, instead
of using the default parameter set.
.IP
A sample parameter file should accompany your distribution.
See the RNAlib documentation for details on the file format.
.TP
\fB\-\-nsp\fR=\fISTRING\fR
Allow other pairs in addition to the usual
AU,GC,and GU pairs.
.IP
Its argument is a comma separated list of additionally allowed pairs. If the
first character is a "\-" then AB will imply that AB and BA are allowed
pairs.
e.g. RNAfold \fB\-nsp\fR \fB\-GA\fR  will allow GA and AG pairs. Nonstandard pairs are
given 0 stacking energy.
.TP
\fB\-e\fR, \fB\-\-energyModel\fR=\fIINT\fR
Rarely used option to fold sequences from the
artificial ABCD... alphabet, where A pairs B,
C\-D etc.  Use the energy parameters for GC
(\fB\-e\fR 1) or AU (\fB\-e\fR 2) pairs.
.TP
\fB\-\-maxBPspan\fR=\fIINT\fR
Set the maximum base pair span
(default=`\-1')
.SH EXAMPLES

RNApvmin acceptes a SHAPE file and a corresponding nucleotide sequence, which is read form stdin.

.nf
.ft CW
  RNApvmin sequence.shape < sequence.fasta > sequence.pv
.ft
.fi

The normalized SHAPE reactivity data has to be stored in a text file, where each line contains the position
and the reactivity for a certain nucleotide ([position] [nucleotide] [SHAPE reactivity]).

.nf
.ft CW
  1 A 1.286
  2 U 0.383
  3 C 0.033
  4 C 0.017
  ...
  ...
  98 U 0.234
  99 G 0.885
.ft
.fi

The nucleotide information in the SHAPE file is optional and will be used to cross check the given input sequence if present.
If SHAPE reactivities could not be determined for every nucleotide, missing values can simply be omited.

The progress of the minimization will be printed to stderr. Once a solution was found, the calculated perturbation vector
will be print to stdout and can then further be used to constrain RNAfold's MFE/partition function calculation by applying
the perturbation energies as soft constraints.

.nf
.ft CW
  RNAfold --shape=sequence.pv --shapeMethod=W < sequence.fasta
.ft
.fi
.SH AUTHOR

Dominik Luntzer, Ronny Lorenz
.SH REFERENCES
.I If you use this program in your work you might want to cite:

R. Lorenz, S.H. Bernhart, C. Hoener zu Siederdissen, H. Tafer, C. Flamm, P.F. Stadler and I.L. Hofacker (2011),
"ViennaRNA Package 2.0",
Algorithms for Molecular Biology: 6:26 

I.L. Hofacker, W. Fontana, P.F. Stadler, S. Bonhoeffer, M. Tacker, P. Schuster (1994),
"Fast Folding and Comparison of RNA Secondary Structures",
Monatshefte f. Chemie: 125, pp 167-188


S. Washietl, I.L. Hofacker, P.F. Stadler, M. Kellis (2012)
"RNA folding with soft constraints: reconciliation of probing data and thermodynamics secondary structure prediction"
Nucl Acids Res: 40(10), pp 4261-4272
.SH "REPORTING BUGS"
If in doubt our program is right, nature is at fault.
.br
Comments should be sent to rna@tbi.univie.ac.at.
