# Makefile.in generated by automake 1.15 from Makefile.am.
# src/ViennaRNA/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/ViennaRNA
pkgincludedir = $(includedir)/ViennaRNA
pkglibdir = $(libdir)/ViennaRNA
pkglibexecdir = $(libexecdir)/ViennaRNA
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = src/ViennaRNA
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_rna.m4 \
	$(top_srcdir)/m4/ac_rna_features.m4 \
	$(top_srcdir)/m4/ac_rna_lto.m4 \
	$(top_srcdir)/m4/ac_rna_macros.m4 \
	$(top_srcdir)/m4/ac_rna_refman.m4 \
	$(top_srcdir)/m4/ac_rna_subpackages.m4 \
	$(top_srcdir)/m4/ac_rna_swig.m4 \
	$(top_srcdir)/m4/ac_rna_unit_tests.m4 \
	$(top_srcdir)/m4/ax_append_flag.m4 \
	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/m4/ax_compiler_vendor.m4 \
	$(top_srcdir)/m4/ax_perl_ext.m4 \
	$(top_srcdir)/m4/ax_perl_ext_flags.m4 \
	$(top_srcdir)/m4/ax_pkg_swig.m4 \
	$(top_srcdir)/m4/ax_python_devel.m4 \
	$(top_srcdir)/m4/ax_require_defined.m4 \
	$(top_srcdir)/m4/ax_swig_python.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__noinst_HEADERS_DIST) \
	$(am__pkginclude_HEADERS_DIST) $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
libRNA_la_DEPENDENCIES = libRNA_conv.la
am_libRNA_la_OBJECTS =
libRNA_la_OBJECTS = $(am_libRNA_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libRNA_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libRNA_la_LDFLAGS) $(LDFLAGS) -o $@
libRNA_conv_la_LIBADD =
am__libRNA_conv_la_SOURCES_DIST = dist_vars.c data_structures.c \
	part_func.c read_epars.c treedist.c energy_par.c inverse.c \
	ProfileDist.c RNAstruct.c utils.c mfe.c fold.c naview.c \
	PS_dot.c stringdist.c params.c subopt.c list.c Lfold.c \
	cofold.c part_func_co.c ProfileAln.c duplex.c alifold.c \
	alipfold.c aln_util.c LPfold.c string_utils.c part_func_up.c \
	ribo.c findpath.c convert_epars.c MEA.c aliLfold.c mm.c \
	2Dfold.c 2Dpfold.c plex_functions.c plot_layouts.c ali_plex.c \
	c_plex.c plex.c snofold.c snoop.c move_set.c gquad.c eval.c \
	constraints.c ligand.c perturbation_fold.c centroid.c \
	structure_utils.c model.c file_formats.c dp_matrices.c \
	plot_structure.c plot_aln.c exterior_loops.c hairpin_loops.c \
	interior_loops.c multibranch_loops.c boltzmann_sampling.c \
	../libsvm-3.20/svm.cpp svm_utils.c ../json/json.c
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = ../libsvm-3.20/svm.lo
am__objects_2 = svm_utils.lo
am__objects_3 = ../json/json.lo
am_libRNA_conv_la_OBJECTS = dist_vars.lo data_structures.lo \
	part_func.lo read_epars.lo treedist.lo energy_par.lo \
	inverse.lo ProfileDist.lo RNAstruct.lo utils.lo mfe.lo fold.lo \
	naview.lo PS_dot.lo stringdist.lo params.lo subopt.lo list.lo \
	Lfold.lo cofold.lo part_func_co.lo ProfileAln.lo duplex.lo \
	alifold.lo alipfold.lo aln_util.lo LPfold.lo string_utils.lo \
	part_func_up.lo ribo.lo findpath.lo convert_epars.lo MEA.lo \
	aliLfold.lo mm.lo 2Dfold.lo 2Dpfold.lo plex_functions.lo \
	plot_layouts.lo ali_plex.lo c_plex.lo plex.lo snofold.lo \
	snoop.lo move_set.lo gquad.lo eval.lo constraints.lo ligand.lo \
	perturbation_fold.lo centroid.lo structure_utils.lo model.lo \
	file_formats.lo dp_matrices.lo plot_structure.lo plot_aln.lo \
	exterior_loops.lo hairpin_loops.lo interior_loops.lo \
	multibranch_loops.lo boltzmann_sampling.lo $(am__objects_1) \
	$(am__objects_2) $(am__objects_3)
libRNA_conv_la_OBJECTS = $(am_libRNA_conv_la_OBJECTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libRNA_la_SOURCES) $(nodist_EXTRA_libRNA_la_SOURCES) \
	$(libRNA_conv_la_SOURCES)
DIST_SOURCES = $(libRNA_la_SOURCES) $(am__libRNA_conv_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__noinst_HEADERS_DIST = intl11.h intl11dH.h intl21.h intl21dH.h \
	intl22.h intl22dH.h list.h 1.8.4_epars.h 1.8.4_intloops.h \
	../libsvm-3.20/svm.h ../json/json.h
am__pkginclude_HEADERS_DIST = energy_par.h pair_mat.h RNAstruct.h \
	dist_vars.h mfe.h fold.h part_func.h stringdist.h edit_cost.h \
	fold_vars.h profiledist.h treedist.h energy_const.h inverse.h \
	PS_dot.h utils.h params.h subopt.h cofold.h duplex.h alifold.h \
	aln_util.h part_func_co.h ProfileAln.h LPfold.h Lfold.h \
	part_func_up.h ribo.h findpath.h data_structures.h MEA.h mm.h \
	loop_energies.h exterior_loops.h hairpin_loops.h \
	interior_loops.h multibranch_loops.h naview.h 2Dfold.h \
	2Dpfold.h read_epars.h convert_epars.h PKplex.h plot_layouts.h \
	ali_plex.h plex.h snofold.h snoop.h move_set.h gquad.h \
	constraints.h eval.h perturbation_fold.h centroid.h \
	structure_utils.h string_utils.h model.h file_formats.h \
	dp_matrices.h plot_structure.h plot_aln.h ligand.h \
	boltzmann_sampling.h svm_utils.h ../libsvm-3.20/svm.h \
	../json/json.h
HEADERS = $(noinst_HEADERS) $(pkginclude_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/config/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/milad/workspace/mmfold/config/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_CFLAGS = $(OPENMP_CFLAGS)
AM_CPPFLAGS = -I$(top_srcdir)/src ${SVM_INC} ${JSON_INC}  
AM_CXXFLAGS = $(OPENMP_CFLAGS)
AM_DEFAULT_VERBOSITY = 0
AM_LDFLAGS = 
AR = gcc-ar
AUTOCONF = ${SHELL} /home/milad/workspace/mmfold/config/missing autoconf
AUTOHEADER = ${SHELL} /home/milad/workspace/mmfold/config/missing autoheader
AUTOMAKE = ${SHELL} /home/milad/workspace/mmfold/config/missing automake-1.15
AWK = gawk
AX_SWIG_PYTHON_CPPFLAGS = -I/home/milad/anaconda2/include/python2.7
AX_SWIG_PYTHON_OPT = -python
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -flto
CHECK_CFLAGS = 
CHECK_DIR = 
CHECK_LIBS = 
CLUSTER_DIR = 
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -flto
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DEPRECATION_WARNING = 
DLLTOOL = false
DOXYGEN_CMD_LATEX = /usr/bin/latex
DOXYGEN_CMD_MAKEINDEX = /usr/bin/makeindex
DOXYGEN_CONF = doxygen.conf
DOXYGEN_DOCDIR = doc
DOXYGEN_GENERATE_HTML = YES
DOXYGEN_GENERATE_LATEX = YES
DOXYGEN_HAVE_DOT = YES
DOXYGEN_PROJECT_NAME = RNAlib-2.2.4
DOXYGEN_SRCDIR = .
DOXYGEN_WITH_PDFLATEX = YES
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FLOAT_PF_FLAG = 
GENERIC_HC_DEF = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
ISODATE = 2016-03-07
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS =  -flto
LIBGOMPFLAG = -lgomp
LIBOBJS = 
LIBS = -lm 
LIBSVM_DIR = libsvm-3.20
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_DEPS = config/ltmain.sh
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LTO_FLAGS = -flto
LTO_LDFLAGS = -flto
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/milad/workspace/mmfold/config/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = gcc-nm
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OPENMP_CFLAGS = -fopenmp
OTOOL = 
OTOOL64 = 
OUR_AR = gcc-ar
OUR_NM = gcc-nm
OUR_RANLIB = gcc-ranlib
PACKAGE = ViennaRNA
PACKAGE_BUGREPORT = rna@tbi.univie.ac.at
PACKAGE_NAME = ViennaRNA
PACKAGE_STRING = ViennaRNA 2.2.4
PACKAGE_TARNAME = ViennaRNA
PACKAGE_URL = http://www.tbi.univie.ac.at/RNA
PACKAGE_VERSION = 2.2.4
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PERLXS_CFLAGS =  -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fstack-protector -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64  -I/usr/lib/perl/5.18/CORE 
PERLXS_LDFLAGS = -Wl,-E  -fstack-protector -L/usr/local/lib  -L/usr/lib/perl/5.18/CORE -lperl -ldl -lm -lpthread -lc -lcrypt
PERL_ARCH_RELATIVE_INSTALL_DIR = /lib/perl/5.18.2
PERL_EXT_CPPFLAGS = -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fstack-protector -fno-strict-aliasing -pipe -I/usr/local/include
PERL_EXT_DLEXT = .so
PERL_EXT_INC = /usr/lib/perl/5.18/CORE
PERL_EXT_LDFLAGS = -shared -L/usr/local/lib -fstack-protector
PERL_EXT_LIB = /usr/local/lib/perl/5.18.2
PERL_EXT_PREFIX = /usr
PERL_EXT_SITEARCH = /usr/local/lib/perl/5.18.2
PERL_EXT_SITELIB = /usr/local/share/perl/5.18.2
PERL_EXT_SITEPREFIX = /usr/local
PERL_EXT_VENDORARCH = /usr/lib/perl5
PERL_EXT_VENDORLIB = /usr/share/perl5
PERL_EXT_VENDORPREFIX = /usr
PERL_INTERFACE = Perl
PERL_LIB_RELATIVE_INSTALL_DIR = /share/perl/5.18.2
PKGPYEXECDIR = ${pyexecdir}/ViennaRNA
PKGPYTHONDIR = ${pythondir}/ViennaRNA
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POW_LIB = 
PYEXECDIR = ${exec_prefix}/lib/python2.7/site-packages
PYTHON = /home/milad/anaconda2/bin/python
PYTHONDIR = ${prefix}/lib/python2.7/site-packages
PYTHON_CPPFLAGS = -I/home/milad/anaconda2/include/python2.7
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_EXTRA_LDFLAGS = -lpthread -ldl  -lutil -lm
PYTHON_EXTRA_LIBS = -Xlinker -export-dynamic
PYTHON_INTERFACE = Python
PYTHON_LIBS = -L/home/milad/anaconda2/lib -lpython2.7
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_SITE_PKG = /home/milad/anaconda2/lib/python2.7/site-packages
PYTHON_SITE_PKG_EXEC = /home/milad/anaconda2/lib/python2.7/site-packages
PYTHON_VERSION = 2.7
RANLIB = gcc-ranlib
REFERENCE_MANUAL_PDF_NAME = RNAlib-2.2.4.pdf
REFERENCE_MANUAL_TAGFILE = RNAlib-2.2.4.tag
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
SWIG = 
SWIG_LIB = 
USER_AR = 
USER_NM = 
USER_RANLIB = 
VERSION = 2.2.4
WITH_FLOAT_PF = 
WITH_JSON = WITH_JSON_SUPPORT
WITH_SVM = USE_SVM
abs_builddir = /home/milad/workspace/mmfold/src/ViennaRNA
abs_srcdir = /home/milad/workspace/mmfold/src/ViennaRNA
abs_top_builddir = /home/milad/workspace/mmfold
abs_top_srcdir = /home/milad/workspace/mmfold
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dot = /usr/bin/dot
doxygen = /usr/bin/doxygen
dvidir = ${docdir}
egrep = /bin/egrep
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${datarootdir}/doc/${PACKAGE_TARNAME}/html
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/milad/workspace/mmfold/config/install-sh
latex = /usr/bin/latex
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
makeindex = /usr/bin/makeindex
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pdflatex = no
perl = /usr/bin/perl
pkgpyexecdir = ${pyexecdir}/ViennaRNA
pkgpythondir = ${pythondir}/ViennaRNA
prefix = /home/milad/software/mmfold
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.7/site-packages
pythondir = ${prefix}/lib/python2.7/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  src/Kinfold src/RNAforester
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
AUTOMAKE_OPTIONS = subdir-objects

# the library names to build
lib_LTLIBRARIES = libRNA.la

# convenience library
noinst_LTLIBRARIES = libRNA_conv.la

# where to install the headers on the system
libRNA_ladir = $(includedir)/ViennaRNA
libRNA_la_SOURCES = 

# ldflags to avoid version information
libRNA_la_LIBADD = libRNA_conv.la
libRNA_la_LDFLAGS = -avoid-version -static
#nodist_EXTRA_libRNA_la_SOURCES = 

# Dummy C++ source to cause C++ linking.
nodist_EXTRA_libRNA_la_SOURCES = dummy.cxx
SVM_SRC = ../libsvm-3.20/svm.cpp
SVM_INC = -I$(top_srcdir)/src/libsvm-3.20
SVM_H = ../libsvm-3.20/svm.h
SVM_UTILS = svm_utils.c
SVM_UTILS_H = svm_utils.h
JSON_SRC = ../json/json.c
JSON_H = ../json/json.h
JSON_INC = -I$(top_srcdir)/src/json
pkginclude_HEADERS = energy_par.h pair_mat.h RNAstruct.h dist_vars.h mfe.h \
                      fold.h part_func.h stringdist.h edit_cost.h fold_vars.h \
                      profiledist.h treedist.h energy_const.h inverse.h PS_dot.h \
                      utils.h params.h subopt.h cofold.h duplex.h alifold.h aln_util.h \
                      part_func_co.h ProfileAln.h LPfold.h Lfold.h part_func_up.h ribo.h \
                      findpath.h data_structures.h MEA.h mm.h loop_energies.h \
                      exterior_loops.h hairpin_loops.h interior_loops.h multibranch_loops.h \
                      naview.h 2Dfold.h 2Dpfold.h read_epars.h convert_epars.h PKplex.h\
                      plot_layouts.h ali_plex.h plex.h snofold.h snoop.h move_set.h\
                      gquad.h constraints.h eval.h perturbation_fold.h centroid.h\
                      structure_utils.h string_utils.h model.h file_formats.h dp_matrices.h \
                      plot_structure.h plot_aln.h ligand.h boltzmann_sampling.h \
                      ${SVM_UTILS_H} ${SVM_H} ${JSON_H}

libRNA_conv_la_SOURCES = dist_vars.c data_structures.c part_func.c read_epars.c\
                    treedist.c energy_par.c inverse.c ProfileDist.c \
                    RNAstruct.c utils.c mfe.c fold.c naview.c PS_dot.c \
                    stringdist.c params.c subopt.c list.c Lfold.c \
                    cofold.c part_func_co.c ProfileAln.c duplex.c \
                    alifold.c alipfold.c aln_util.c LPfold.c string_utils.c \
                    part_func_up.c ribo.c findpath.c convert_epars.c\
                    MEA.c aliLfold.c mm.c 2Dfold.c 2Dpfold.c plex_functions.c \
                    plot_layouts.c ali_plex.c c_plex.c plex.c snofold.c \
                    snoop.c move_set.c gquad.c eval.c constraints.c ligand.c \
                    perturbation_fold.c centroid.c structure_utils.c model.c \
                    file_formats.c dp_matrices.c plot_structure.c plot_aln.c \
                    exterior_loops.c hairpin_loops.c interior_loops.c multibranch_loops.c \
                    boltzmann_sampling.c ${SVM_SRC} ${SVM_UTILS} ${JSON_SRC}


# static library for subpackages
BUILT_SOURCES = libRNA.a
noinst_HEADERS = intl11.h intl11dH.h intl21.h intl21dH.h \
                  intl22.h intl22dH.h list.h\
                  1.8.4_epars.h 1.8.4_intloops.h ${SVM_H} ${JSON_H}

EXTRA_DIST = $(pkginclude_HEADERS) circfold.inc alicircfold.inc model_avg.inc model_sd.inc ${SVM_H} ${JSON_H}
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .cxx .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/ViennaRNA/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/ViennaRNA/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libRNA.la: $(libRNA_la_OBJECTS) $(libRNA_la_DEPENDENCIES) $(EXTRA_libRNA_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libRNA_la_LINK) -rpath $(libdir) $(libRNA_la_OBJECTS) $(libRNA_la_LIBADD) $(LIBS)
../libsvm-3.20/$(am__dirstamp):
	@$(MKDIR_P) ../libsvm-3.20
	@: > ../libsvm-3.20/$(am__dirstamp)
../libsvm-3.20/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ../libsvm-3.20/$(DEPDIR)
	@: > ../libsvm-3.20/$(DEPDIR)/$(am__dirstamp)
../libsvm-3.20/svm.lo: ../libsvm-3.20/$(am__dirstamp) \
	../libsvm-3.20/$(DEPDIR)/$(am__dirstamp)
../json/$(am__dirstamp):
	@$(MKDIR_P) ../json
	@: > ../json/$(am__dirstamp)
../json/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ../json/$(DEPDIR)
	@: > ../json/$(DEPDIR)/$(am__dirstamp)
../json/json.lo: ../json/$(am__dirstamp) \
	../json/$(DEPDIR)/$(am__dirstamp)

libRNA_conv.la: $(libRNA_conv_la_OBJECTS) $(libRNA_conv_la_DEPENDENCIES) $(EXTRA_libRNA_conv_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libRNA_conv_la_OBJECTS) $(libRNA_conv_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f ../libsvm-3.20/*.$(OBJEXT)
	-rm -f ../libsvm-3.20/*.lo
	-rm -f ../json/*.$(OBJEXT)
	-rm -f ../json/*.lo

distclean-compile:
	-rm -f *.tab.c

include ../libsvm-3.20/$(DEPDIR)/svm.Plo
include ../json/$(DEPDIR)/json.Plo
include ./$(DEPDIR)/2Dfold.Plo
include ./$(DEPDIR)/2Dpfold.Plo
include ./$(DEPDIR)/LPfold.Plo
include ./$(DEPDIR)/Lfold.Plo
include ./$(DEPDIR)/MEA.Plo
include ./$(DEPDIR)/PS_dot.Plo
include ./$(DEPDIR)/ProfileAln.Plo
include ./$(DEPDIR)/ProfileDist.Plo
include ./$(DEPDIR)/RNAstruct.Plo
include ./$(DEPDIR)/aliLfold.Plo
include ./$(DEPDIR)/ali_plex.Plo
include ./$(DEPDIR)/alifold.Plo
include ./$(DEPDIR)/alipfold.Plo
include ./$(DEPDIR)/aln_util.Plo
include ./$(DEPDIR)/boltzmann_sampling.Plo
include ./$(DEPDIR)/c_plex.Plo
include ./$(DEPDIR)/centroid.Plo
include ./$(DEPDIR)/cofold.Plo
include ./$(DEPDIR)/constraints.Plo
include ./$(DEPDIR)/convert_epars.Plo
include ./$(DEPDIR)/data_structures.Plo
include ./$(DEPDIR)/dist_vars.Plo
include ./$(DEPDIR)/dp_matrices.Plo
include ./$(DEPDIR)/dummy.Plo
include ./$(DEPDIR)/duplex.Plo
include ./$(DEPDIR)/energy_par.Plo
include ./$(DEPDIR)/eval.Plo
include ./$(DEPDIR)/exterior_loops.Plo
include ./$(DEPDIR)/file_formats.Plo
include ./$(DEPDIR)/findpath.Plo
include ./$(DEPDIR)/fold.Plo
include ./$(DEPDIR)/gquad.Plo
include ./$(DEPDIR)/hairpin_loops.Plo
include ./$(DEPDIR)/interior_loops.Plo
include ./$(DEPDIR)/inverse.Plo
include ./$(DEPDIR)/ligand.Plo
include ./$(DEPDIR)/list.Plo
include ./$(DEPDIR)/mfe.Plo
include ./$(DEPDIR)/mm.Plo
include ./$(DEPDIR)/model.Plo
include ./$(DEPDIR)/move_set.Plo
include ./$(DEPDIR)/multibranch_loops.Plo
include ./$(DEPDIR)/naview.Plo
include ./$(DEPDIR)/params.Plo
include ./$(DEPDIR)/part_func.Plo
include ./$(DEPDIR)/part_func_co.Plo
include ./$(DEPDIR)/part_func_up.Plo
include ./$(DEPDIR)/perturbation_fold.Plo
include ./$(DEPDIR)/plex.Plo
include ./$(DEPDIR)/plex_functions.Plo
include ./$(DEPDIR)/plot_aln.Plo
include ./$(DEPDIR)/plot_layouts.Plo
include ./$(DEPDIR)/plot_structure.Plo
include ./$(DEPDIR)/read_epars.Plo
include ./$(DEPDIR)/ribo.Plo
include ./$(DEPDIR)/snofold.Plo
include ./$(DEPDIR)/snoop.Plo
include ./$(DEPDIR)/string_utils.Plo
include ./$(DEPDIR)/stringdist.Plo
include ./$(DEPDIR)/structure_utils.Plo
include ./$(DEPDIR)/subopt.Plo
include ./$(DEPDIR)/svm_utils.Plo
include ./$(DEPDIR)/treedist.Plo
include ./$(DEPDIR)/utils.Plo

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

.cxx.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cxx.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf ../libsvm-3.20/.libs ../libsvm-3.20/_libs
	-rm -rf ../json/.libs ../json/_libs
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f ../libsvm-3.20/$(DEPDIR)/$(am__dirstamp)
	-rm -f ../libsvm-3.20/$(am__dirstamp)
	-rm -f ../json/$(DEPDIR)/$(am__dirstamp)
	-rm -f ../json/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool clean-local \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ../libsvm-3.20/$(DEPDIR) ../json/$(DEPDIR) ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-pkgincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ../libsvm-3.20/$(DEPDIR) ../json/$(DEPDIR) ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES uninstall-pkgincludeHEADERS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-local \
	clean-noinstLTLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-pkgincludeHEADERS install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-libLTLIBRARIES uninstall-pkgincludeHEADERS

.PRECIOUS: Makefile


libRNA.a: libRNA.la
	$(LIBTOOL) --config > libtoolconfig.tmp
	. ./libtoolconfig.tmp; cp "$$objdir/libRNA.a" ./
	rm -f libtoolconfig.tmp

clean-local:
	-rm -f libRNA.a

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
